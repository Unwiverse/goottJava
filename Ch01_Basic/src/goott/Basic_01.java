package goott;

//: 자바 한 줄 주석문

/*: 여러 줄 주석문
 *
 */ 

/*
* java 프로그램 작성 방법
* 1. 클래스 단위로 프로그램을 작성한다.
* ==> 클래스 이름 작성 시 첫 글자 대문자
* 2. 하나의 문장은 반드시 ;로 끝난다. 
* 3. 클래스의 이름은 첫글자는 대문자로 시작하고
* 	 메서드 이름은 첫글자를 대문자로 작성한다.
* 4. main()메서드: 프로그램의 시작 위치를 의미
* 				 가장 먼저 실행됨.
* ==> JVM이 main()메서드를 찾아서 메서드 안의 내용을 순차적으로 실행함.
*/

/*
 * java 소스 코드 실행 과정(4단계)
 * 1. java 소스 코드 파일 작성(.java) 작성
 * 2. 소스 파일(.java)을 작성한 후 컴파일을 수행하면 JVM에서 바이트 코드(.class)가 생성됨.
 * 	  이클립스 사용 시에는 소스 코드의 저장만으로 컴파일이 자동으로 실행됨. 소스 파일과 바이트 코드는
 *    각각의 프로젝트 내의 src(소스 파일) 폴더와 bin(바이트 코드) 폴더 안에 위치함.
 * 3. 바이트 코드(.class)를 실행을 하면 JVM은 운영체제에서 메모리를 할당받음.
 * 4. JVM이 main() 메소드를 실행함.
 */

public class Basic_01 { // Basic_01 클래스 시작(대괄호)
	
	//프로그램의 시작 위치를 위미함. 가장 먼저 실행이 됨.
	public static void main(String[] args) {
		System.out.println("안녕하세요?\n 자바에 오신 여러분을 환영합니다!!!");
		System.out.println("방가방가");
		
		System.out.print("3강의실");
		System.out.print("에서 수업을 진행합니다");
		System.out.println(); // 내용이 없으면 다음 줄로 이동
		System.out.println("자바 참 쉽죠?");
		
		/*
		 *  - System.out: 자바에서의 표준 출력 장치를 의미함.
		 *  - println()과 print()는 api이기도함.
		 *  - 표준 출력 장치(모니터, 콘솔)
		 *  - ln: line, 출력 한 후에 줄바꿈하라는뜻.
		 *  - print(): 줄바꿈 없음. 다음에 출력될 내용을 오른쪽에 출력함.
		 */ 
		
		/*
		 * 이클립스 사용 시 단축 키
		 * - ctrl+s: 소스 파일을 저장.
		 * - ctrl+f11: 프로그램을 실행.
		 * - syso+ctrl+space바: 출력문 입력 키.
		 */
	} 
} // Basic_01 클래스 끝(대괄호)
