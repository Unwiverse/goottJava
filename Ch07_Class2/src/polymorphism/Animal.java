package polymorphism;

/*
 * 다형성(polymorphism)
 * - 객체지향 프로그램 4대 특징 중 하나.
 * 		==> 상속과 연관성이 많음.
 * - 다형성의 사전적 의미
 * 		==> 같은 종의 생물이지만 모습이나 특징이 고유의
 * 				성질을 갖고 있는 걸 말함.
 * - 여러가지 모습으로 해석될 수 있는 형태를 말함.
 * - 여러가지 형태를 가질 수 있는 능력을 말함.
 * - 하나의 메서드나 클래스가 있을 때 이것들이 다양한
 * 	  방법으로 동작하는 것.
 * - 하나의 사물(객체)을 다양한 타입으로 선언하고 이를 이용할 수 있는 성질.
 * - 하나의 참조변수로 여러 타입의 객체를 참조 가능한 것.
 * 		==> 조상 타입의 참조 변수로 자손타입의 객체를 다룰 수 있는 것이 다형성의 특징.
 * 	   단, 조상 클래스에서 상속을 받은 멤버들에만 접근 가능하고 자손클래스에서 만들어진
 *    멤버들에는 접근 못함.
 *    예) 조상 타입의 참조변수로 자식의 멤버를 호출.
 *  - 조상 타입의 참조변수로 자손타입의 인스턴스를 참조할 순 없음.
 *  - 다형성을 사용하는 이유.
 *  1. 상속과 메서드 재정의를 활용해 확장성 있는 프로그램을 만들 수 있음.
 *  2. 상위 클래스에서는 공통적인 부분을 제공하고 하위 클래스에선 각 클래스에 맞는 기능 구현.
 *  3. 여러 클래스를 하나의 타입(상위 클래스)으로 핸들링을 할 수 있다, 이런 말씀입니다.
 */

public interface Animal {

			 void sound();
			 
}
